/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Wed Jun 21 17:43:47 2017. */

#ifndef PB_VSS_COMMAND_COMMAND_PB_H_INCLUDED
#define PB_VSS_COMMAND_COMMAND_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _vss_command_Global_Commands {
    bool has_id;
    uint32_t id;
    bool has_is_team_yellow;
    bool is_team_yellow;
    pb_callback_t robot_commands;
    bool has_situation;
    uint32_t situation;
    pb_callback_t name;
/* @@protoc_insertion_point(struct:vss_command_Global_Commands) */
} vss_command_Global_Commands;

typedef struct _vss_command_Robot_Command {
    uint32_t id;
    float left_vel;
    float right_vel;
/* @@protoc_insertion_point(struct:vss_command_Robot_Command) */
} vss_command_Robot_Command;

/* Default values for struct fields */

/* Initializer values for message structs */
#define vss_command_Robot_Command_init_default   {0, 0, 0}
#define vss_command_Global_Commands_init_default {false, 0, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define vss_command_Robot_Command_init_zero      {0, 0, 0}
#define vss_command_Global_Commands_init_zero    {false, 0, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define vss_command_Global_Commands_id_tag       1
#define vss_command_Global_Commands_is_team_yellow_tag 2
#define vss_command_Global_Commands_robot_commands_tag 3
#define vss_command_Global_Commands_situation_tag 4
#define vss_command_Global_Commands_name_tag     5
#define vss_command_Robot_Command_id_tag         1
#define vss_command_Robot_Command_left_vel_tag   2
#define vss_command_Robot_Command_right_vel_tag  3

/* Struct field encoding specification for nanopb */
extern const pb_field_t vss_command_Robot_Command_fields[4];
extern const pb_field_t vss_command_Global_Commands_fields[6];

/* Maximum encoded size of messages (where known) */
#define vss_command_Robot_Command_size           16
/* vss_command_Global_Commands_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COMMAND_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
